[{"path":"https://zhen-miao.github.io/PICsnATAC/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 PICsnATAC authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://zhen-miao.github.io/PICsnATAC/articles/vignette-1----PIC-counting-with-10X-Cell-Ranger-output.html","id":"content","dir":"Articles","previous_headings":"","what":"content","title":"Vignette 1 -- PIC counting with 10X Cell Ranger output","text":"Vignette contains example use PIC counting construct Peak--Cell matrix 10X Cell Ranger output.","code":""},{"path":"https://zhen-miao.github.io/PICsnATAC/articles/vignette-1----PIC-counting-with-10X-Cell-Ranger-output.html","id":"required-libraries","dir":"Articles","previous_headings":"","what":"required libraries","title":"Vignette 1 -- PIC counting with 10X Cell Ranger output","text":"Please make sure following libraries installed loaded analysis.","code":"library(\"data.table\") library(\"GenomicRanges\") library(\"Matrix\") library(\"PICsnATAC\")"},{"path":"https://zhen-miao.github.io/PICsnATAC/articles/vignette-1----PIC-counting-with-10X-Cell-Ranger-output.html","id":"input-files","dir":"Articles","previous_headings":"","what":"Input files","title":"Vignette 1 -- PIC counting with 10X Cell Ranger output","text":"following files required input PIC counting: cell barcodes metadata (singlecell.csv) list peak regions (peaks.bed) fragment files (fragment.tsv.gz) step--step instructions obtaining input 10X Cell Ranger output files. Example datasets can downloaded 10X Genomics website .","code":""},{"path":"https://zhen-miao.github.io/PICsnATAC/articles/vignette-1----PIC-counting-with-10X-Cell-Ranger-output.html","id":"cell-barcodes","dir":"Articles","previous_headings":"Input files","what":"Cell Barcodes","title":"Vignette 1 -- PIC counting with 10X Cell Ranger output","text":"want keep cells Cell Ranger filtering scheme: Alternatively, can use 'singlecell.csv' file conduct customized filtering based total number reads TSS enrichment, etc.","code":"meta.data <- read.csv(\"atac_pbmc_5k_nextgem_singlecell.csv\", header = TRUE) # -- Note, in your own Cell Ranger output, the file name will be 'singlecell.csv' meta.data_filtered <- meta.data[meta.data$is__cell_barcode == 1, ] cells <- meta.data_filtered$barcode"},{"path":"https://zhen-miao.github.io/PICsnATAC/articles/vignette-1----PIC-counting-with-10X-Cell-Ranger-output.html","id":"peak-set","dir":"Articles","previous_headings":"Input files","what":"Peak set","title":"Vignette 1 -- PIC counting with 10X Cell Ranger output","text":"want keep set peaks Cell Ranger: Note Cell Ranger tend output wider peaks peak set cell-type specific, MACS2 often used call peaks cell type separately combining one union set peaks. use MACS2-called peaks, just change file name accordingly.","code":"peaks <- data.table::fread(\"atac_pbmc_5k_nextgem_peaks.bed\", header = FALSE) # -- in your own Cell Ranger output, the file name will be 'peaks.bed' colnames(peaks) <- c(\"seqname\", \"start\", \"end\") peak_sets <- GenomicRanges::makeGRangesFromDataFrame(peaks)"},{"path":[]},{"path":"https://zhen-miao.github.io/PICsnATAC/articles/vignette-1----PIC-counting-with-10X-Cell-Ranger-output.html","id":"load-the-whole-file-memory-heavy","dir":"Articles","previous_headings":"Run PIC and save output","what":"Load the whole file (memory heavy)","title":"Vignette 1 -- PIC counting with 10X Cell Ranger output","text":"Note multiple matrices, please make sure save different files.","code":"fragment_tsv_gz_file_location <- \"atac_pbmc_5k_nextgem_fragments.tsv.gz\" pic_mat <- PIC_counting(   cells = cells,   fragment_tsv_gz_file_location = fragment_tsv_gz_file_location,   peak_sets = peak_sets ) saveRDS(pic_mat, \"PIC_mat.rds\")"},{"path":"https://zhen-miao.github.io/PICsnATAC/articles/vignette-1----PIC-counting-with-10X-Cell-Ranger-output.html","id":"load-the-file-dynamically-via-rsamtools","dir":"Articles","previous_headings":"Run PIC and save output","what":"Load the file dynamically via Rsamtools","title":"Vignette 1 -- PIC counting with 10X Cell Ranger output","text":"Alternatively, large fragment files, may want load dynamically. simple PIC_counting, just need specify load_full = FALSE PIC_counting load file chromosome separately.","code":"fragment_tsv_gz_file_location <- \"atac_pbmc_5k_nextgem_fragments.tsv.gz\" pic_mat <- PIC_counting(   cells = cells,   fragment_tsv_gz_file_location = fragment_tsv_gz_file_location,   peak_sets = peak_sets,   load_full = FALSE ) saveRDS(pic_mat, \"PIC_mat.rds\")"},{"path":"https://zhen-miao.github.io/PICsnATAC/articles/vignette-1----PIC-counting-with-10X-Cell-Ranger-output.html","id":"reference","dir":"Articles","previous_headings":"","what":"Reference","title":"Vignette 1 -- PIC counting with 10X Cell Ranger output","text":"used PIC-snATAC counting analysis, please cite manuscript : Miao Z, Kim J. Uniform quantification single-nucleus ATAC-seq data Paired-Insertion Counting (PIC) model-based insertion rate estimator. Nature Methods 21.1 (2024): 32-36.","code":""},{"path":"https://zhen-miao.github.io/PICsnATAC/articles/vignette-2----PIC-counting-in-Seurat-workflow.html","id":"content","dir":"Articles","previous_headings":"","what":"content","title":"Vignette 2 -- PIC counting in Seurat/Signac workflow","text":"Vignette contains example use PIC counting Seurat workflow.","code":""},{"path":"https://zhen-miao.github.io/PICsnATAC/articles/vignette-2----PIC-counting-in-Seurat-workflow.html","id":"required-libraries","dir":"Articles","previous_headings":"","what":"required libraries","title":"Vignette 2 -- PIC counting in Seurat/Signac workflow","text":"Please make sure following libraries installed loaded analysis.","code":"library(\"data.table\") library(\"GenomicRanges\") library(\"Matrix\") library(\"PICsnATAC\") library(\"Signac\") library(\"Seurat\")"},{"path":"https://zhen-miao.github.io/PICsnATAC/articles/vignette-2----PIC-counting-in-Seurat-workflow.html","id":"input-files","dir":"Articles","previous_headings":"","what":"Input files","title":"Vignette 2 -- PIC counting in Seurat/Signac workflow","text":"Input files PIC counting includes: cell barcodes metadata (singlecell.csv) list peak regions (peaks.bed) fragment files (fragment.tsv.gz) fragment file index (fragment.tsv.gz.tbi) step--step instructions obtaining input 10X Cell Ranger output files. Example datasets can downloaded 10X Genomics website . Please also refer Signac Vignettes additional information Signac workflow","code":""},{"path":"https://zhen-miao.github.io/PICsnATAC/articles/vignette-2----PIC-counting-in-Seurat-workflow.html","id":"cell-barcodes","dir":"Articles","previous_headings":"","what":"Cell Barcodes","title":"Vignette 2 -- PIC counting in Seurat/Signac workflow","text":"want keep cells Cell Ranger filtering scheme:","code":"meta.data <- read.csv(\"atac_pbmc_5k_nextgem_singlecell.csv\", header = TRUE) # -- in your own Cell Ranger output, the file name will be 'singlecell.csv' meta.data_filtered <- meta.data[meta.data$is__cell_barcode == 1, ] cells <- meta.data_filtered$barcode"},{"path":"https://zhen-miao.github.io/PICsnATAC/articles/vignette-2----PIC-counting-in-Seurat-workflow.html","id":"peak-set","dir":"Articles","previous_headings":"","what":"Peak set","title":"Vignette 2 -- PIC counting in Seurat/Signac workflow","text":"want keep set peaks Cell Ranger: Note, codes MACS2 called peaks, just change file name","code":"peaks <- data.table::fread(\"atac_pbmc_5k_nextgem_peaks.bed\", header = FALSE) # -- in your own Cell Ranger output, the file name will be 'peaks.bed' colnames(peaks) <- c(\"seqname\", \"start\", \"end\") peak_sets <- GenomicRanges::makeGRangesFromDataFrame(peaks)"},{"path":"https://zhen-miao.github.io/PICsnATAC/articles/vignette-2----PIC-counting-in-Seurat-workflow.html","id":"run-pic-and-save-output","dir":"Articles","previous_headings":"","what":"Run PIC and save output","title":"Vignette 2 -- PIC counting in Seurat/Signac workflow","text":"Note multiple matrices, please make sure save different file names","code":"fragment_tsv_gz_file_location <- \"atac_pbmc_5k_nextgem_fragments.tsv.gz\" pic_mat <- PIC_counting(   cells = cells,   fragment_tsv_gz_file_location = fragment_tsv_gz_file_location,   peak_sets = peak_sets ) saveRDS(pic_mat, \"PIC_mat_1.rds\") ## if you have multiple matrices, don't forget to save under different names"},{"path":"https://zhen-miao.github.io/PICsnATAC/articles/vignette-2----PIC-counting-in-Seurat-workflow.html","id":"create-seurat-object-with-pic-output","dir":"Articles","previous_headings":"","what":"Create Seurat Object with PIC output","title":"Vignette 2 -- PIC counting in Seurat/Signac workflow","text":"","code":"counts <- readRDS(\"PIC_mat_1.rds\")  chrom_assay <- CreateChromatinAssay(   counts = counts,   sep = c(\":\", \"-\"),   genome = \"hg19\",   fragments = fragment_tsv_gz_file_location,   min.cells = 10,   min.features = 200 )  pbmc <- CreateSeuratObject(   counts = chrom_assay,   assay = \"peaks\",   meta.data = metadata )"},{"path":"https://zhen-miao.github.io/PICsnATAC/articles/vignette-2----PIC-counting-in-Seurat-workflow.html","id":"reference","dir":"Articles","previous_headings":"","what":"Reference","title":"Vignette 2 -- PIC counting in Seurat/Signac workflow","text":"used PIC-snATAC counting analysis, please cite manuscript: Miao Z, Kim J. Uniform quantification single-nucleus ATAC-seq data Paired-Insertion Counting (PIC) model-based insertion rate estimator. Nature Methods 21.1 (2024): 32-36. Signac manuscript: Stuart, Tim, et al. “Single-cell chromatin state analysis Signac.” Nature methods 18.11 (2021): 1333-1341.","code":""},{"path":"https://zhen-miao.github.io/PICsnATAC/articles/vignette-3----PIC-counting-in-ArchR-workflow.html","id":"content","dir":"Articles","previous_headings":"","what":"content","title":"Vignette 3 -- PIC counting in ArchR workflow","text":"Vignette contains example use PIC counting ArchR workflow.","code":""},{"path":"https://zhen-miao.github.io/PICsnATAC/articles/vignette-3----PIC-counting-in-ArchR-workflow.html","id":"required-libraries","dir":"Articles","previous_headings":"","what":"required libraries","title":"Vignette 3 -- PIC counting in ArchR workflow","text":"Please make sure following libraries installed loaded analysis.","code":"library(\"data.table\") library(\"GenomicRanges\") library(\"Matrix\") library(\"PICsnATAC\") library(\"ArchR\")"},{"path":"https://zhen-miao.github.io/PICsnATAC/articles/vignette-3----PIC-counting-in-ArchR-workflow.html","id":"input-files","dir":"Articles","previous_headings":"","what":"Input files","title":"Vignette 3 -- PIC counting in ArchR workflow","text":"step--step instructions obtaining input. used ArchR tutorial dataset illustrate add PIC counting output ArchR analysis. Please also refer ArchR Vignettes additional information ArchR workflow Please make sure download tutorial dataset running getTutorialData() function:","code":""},{"path":"https://zhen-miao.github.io/PICsnATAC/articles/vignette-3----PIC-counting-in-ArchR-workflow.html","id":"load-example-dataset-and-creating-arrow-files","dir":"Articles","previous_headings":"","what":"Load Example Dataset and Creating Arrow Files","title":"Vignette 3 -- PIC counting in ArchR workflow","text":"used ArchR example dataset ","code":"inputFiles <- getTutorialData(\"Hematopoiesis\") # inputFiles addArchRGenome(\"hg19\") ArrowFiles <- createArrowFiles(   inputFiles = inputFiles,   sampleNames = names(inputFiles),   minTSS = 4, # Dont set this too high because you can always increase later   minFrags = 1000,   addTileMat = TRUE,   addGeneScoreMat = FALSE )"},{"path":"https://zhen-miao.github.io/PICsnATAC/articles/vignette-3----PIC-counting-in-ArchR-workflow.html","id":"inferring-doublet","dir":"Articles","previous_headings":"","what":"Inferring doublet","title":"Vignette 3 -- PIC counting in ArchR workflow","text":"section ArchR tutorial recommended. option please make sure understand process doublet inferrence executing part","code":"doubScores <- addDoubletScores(   input = ArrowFiles,   k = 10, # Refers to how many cells near a \"pseudo-doublet\" to count.   knnMethod = \"UMAP\", # Refers to the embedding to use for nearest neighbor search.   LSIMethod = 1 )"},{"path":"https://zhen-miao.github.io/PICsnATAC/articles/vignette-3----PIC-counting-in-ArchR-workflow.html","id":"create-an-archrproject","dir":"Articles","previous_headings":"","what":"Create an ArchRproject","title":"Vignette 3 -- PIC counting in ArchR workflow","text":"","code":"proj <- ArchRProject(   ArrowFiles = ArrowFiles,   outputDirectory = \"HemeTutorial\",   copyArrows = TRUE # This is recommened so that you maintain an unaltered   ## copy for later usage. )"},{"path":"https://zhen-miao.github.io/PICsnATAC/articles/vignette-3----PIC-counting-in-ArchR-workflow.html","id":"clustering-with-iterative-lsi","dir":"Articles","previous_headings":"","what":"Clustering with iterative LSI","title":"Vignette 3 -- PIC counting in ArchR workflow","text":"default, ArchR peak calling MACS2 cluster, need run following functions generate clusters.","code":"proj <- addIterativeLSI(ArchRProj = proj, useMatrix = \"TileMatrix\",                         name = \"IterativeLSI\") proj <- addClusters(input = proj, reducedDims = \"IterativeLSI\") proj <- addGroupCoverages(proj)"},{"path":"https://zhen-miao.github.io/PICsnATAC/articles/vignette-3----PIC-counting-in-ArchR-workflow.html","id":"peak-calling-with-macs2","dir":"Articles","previous_headings":"","what":"Peak calling with MACS2","title":"Vignette 3 -- PIC counting in ArchR workflow","text":"Please make sure MACS2 installed running . ArchR also supports peak calling methods, please refer ArchR manual additional options.","code":"pathToMacs2 <- findMacs2() proj <- addReproduciblePeakSet(   ArchRProj = proj,   pathToMacs2 = pathToMacs2 )"},{"path":"https://zhen-miao.github.io/PICsnATAC/articles/vignette-3----PIC-counting-in-ArchR-workflow.html","id":"obtain-pic-matrix-from-archrproject-input","dir":"Articles","previous_headings":"","what":"Obtain PIC matrix from ArchRproject input","title":"Vignette 3 -- PIC counting in ArchR workflow","text":", three samples, compute PIC matrix separately. , loaded samples.","code":"pic_mat <- rep(list(), length = length(inputFiles)) for (s in seq_along(inputFiles)) {   ## select one sample   sample_sel <- names(inputFiles)[s]   allCells <- rownames(getCellColData(proj)) ## all cells after filtering   cells_sample <- allCells[startsWith(allCells, sample_sel)]   cells_sample_name_trunc <- sub(\".*\\\\#\", \"\", cells_sample)    peak_sets <- proj@peakSet ## the peak set, from MACS2 peak calling results   names(peak_sets) <- NULL ## remove the peakset names   fragment_tsv_gz_file_location <- inputFiles[s]    pic_mat[[s]] <- PIC_counting(     cells = cells_sample_name_trunc,     fragment_tsv_gz_file_location = fragment_tsv_gz_file_location,     peak_sets = peak_sets   )    ## change back the cell names to match with original input   colnames(pic_mat[[s]]) <- cells_sample }  ## we can run the following codes to get the complete peak by cell matrix ## and we may save this matrix for tuture uses (e.g., if we hope to run ## other analyses)  # pic_mat_comb <- do.call(cbind, pic_mat) # pic_mat_comb <- pic_mat_comb[,rownames(getCellColData(proj))]"},{"path":"https://zhen-miao.github.io/PICsnATAC/articles/vignette-3----PIC-counting-in-ArchR-workflow.html","id":"add-pic-matrix-to-archrproject-object","dir":"Articles","previous_headings":"","what":"Add PIC matrix to ArchRproject object","title":"Vignette 3 -- PIC counting in ArchR workflow","text":"iteratively add PIC matrix ArchR object. two options. 1. Overwrite PeakMatrix. change original PeakMatrix counts. 2. Create another data slot. , provide example codes setting. ## Overwrite original PeakMatrix","code":"## first, save the data.frame pks <- proj@peakSet names(pks) <- NULL pks = as.data.frame(pks)  for (s in seq_along(inputFiles)) {      ArchR:::.initializeMat(     ArrowFile = ArrowFiles[s], Group = \"PeakMatrix\",     Class = \"integer\", Units = \"counts\",     cellNames = colnames(pic_mat[[s]]),     featureDF = pks, params = \"PeakMatrix\",     force = TRUE   )    ArchR:::.addMatToArrow(     mat = pic_mat[[s]],     ArrowFile = ArrowFiles[s],     Group = \"PeakMatrix/matrix_content\",     binarize = FALSE   ) }"},{"path":"https://zhen-miao.github.io/PICsnATAC/articles/vignette-3----PIC-counting-in-ArchR-workflow.html","id":"create-another-data-slot-called-pic","dir":"Articles","previous_headings":"Add PIC matrix to ArchRproject object","what":"Create another data slot called “PIC”","title":"Vignette 3 -- PIC counting in ArchR workflow","text":"","code":"## first, save the data.frame pks <- proj@peakSet names(pks) <- NULL pks = as.data.frame(pks)  for (s in seq_along(inputFiles)) {      ArchR:::.initializeMat(     ArrowFile = ArrowFiles[s], Group = \"PIC\",     Class = \"integer\", Units = \"counts\",     cellNames = colnames(pic_mat[[s]]),     featureDF = pks, params = \"PIC\",     force = TRUE   )    ArchR:::.addMatToArrow(     mat = pic_mat[[s]],     ArrowFile = ArrowFiles[s],     Group = \"PIC/matrix_content\",     binarize = FALSE   ) }"},{"path":"https://zhen-miao.github.io/PICsnATAC/articles/vignette-3----PIC-counting-in-ArchR-workflow.html","id":"get-available-matrices","dir":"Articles","previous_headings":"","what":"Get available Matrices","title":"Vignette 3 -- PIC counting in ArchR workflow","text":"function display available cell--feature matrices .","code":"getAvailableMatrices(proj)"},{"path":"https://zhen-miao.github.io/PICsnATAC/articles/vignette-3----PIC-counting-in-ArchR-workflow.html","id":"save-and-load-archrproject","dir":"Articles","previous_headings":"","what":"Save and load ArchRProject","title":"Vignette 3 -- PIC counting in ArchR workflow","text":"","code":"## to save object proj <- saveArchRProject(ArchRProj = proj)  ## to load object proj <- loadArchRProject(path = \"HemeTutorial\")"},{"path":"https://zhen-miao.github.io/PICsnATAC/articles/vignette-3----PIC-counting-in-ArchR-workflow.html","id":"reference","dir":"Articles","previous_headings":"","what":"Reference","title":"Vignette 3 -- PIC counting in ArchR workflow","text":"used PIC-snATAC counting analysis, please cite manuscript: Miao Z, Kim J. Uniform quantification single-nucleus ATAC-seq data Paired-Insertion Counting (PIC) model-based insertion rate estimator. Nature Methods 21.1 (2024): 32-36. ArchR manuscript: Granja, Jeffrey M., et al. “ArchR scalable software package integrative single-cell chromatin accessibility analysis.” Nature genetics 53.3 (2021): 403-411.","code":""},{"path":"https://zhen-miao.github.io/PICsnATAC/articles/vignette-4----PIC-counting-with-dsc-ATAC-seq-data.html","id":"content","dir":"Articles","previous_headings":"","what":"content","title":"Vignette 4 -- PIC counting with dsc-ATAC-seq data","text":"Vignette contains example use PIC counting dsc-ATAC-seq data. Specifically, data type fragments per cell, making quantitative. However, due bead overloading, recommend setting deduplicate step PIC counting step. Please see details .","code":""},{"path":"https://zhen-miao.github.io/PICsnATAC/articles/vignette-4----PIC-counting-with-dsc-ATAC-seq-data.html","id":"required-libraries","dir":"Articles","previous_headings":"","what":"required libraries","title":"Vignette 4 -- PIC counting with dsc-ATAC-seq data","text":"Please make sure following libraries installed loaded analysis.","code":"library(\"data.table\") library(\"GenomicRanges\") library(\"Matrix\") library(\"PICsnATAC\")"},{"path":"https://zhen-miao.github.io/PICsnATAC/articles/vignette-4----PIC-counting-with-dsc-ATAC-seq-data.html","id":"input-files","dir":"Articles","previous_headings":"","what":"Input files","title":"Vignette 4 -- PIC counting with dsc-ATAC-seq data","text":"step--step instructions obtaining input. Example datasets can downloaded GEO: GSE123576 . particular, used Mouse brain sample (Mouse #2, Channel #1). Please make sure download following files PIC counting: cell barcodes metadata (GSE123576_mousebrain_cellData_revision.tsv) list peak regions (GSE123576_mousebrain_peaks_revision.bed) fragment files (GSM3507349_Mouse2-Channel1.fragments.tsv.gz) fragment file index (GSM3507349_Mouse2-Channel1.fragments.tsv.gz.tbi)","code":""},{"path":"https://zhen-miao.github.io/PICsnATAC/articles/vignette-4----PIC-counting-with-dsc-ATAC-seq-data.html","id":"cell-barcodes","dir":"Articles","previous_headings":"","what":"Cell Barcodes","title":"Vignette 4 -- PIC counting with dsc-ATAC-seq data","text":"want keep cells publications:","code":"cm <- read.table(\"GSE123576_mousebrain_cellData_revision.tsv\",   sep = \"\\t\", header = TRUE ) samples <- sub(\"_B.*\", \"\", cm$DropBarcode) cm$sample <- samples  ## choose sample cmtsample <- cm[cm$sample == \"N701_Exp119_sample1_S1\", ] cells <- cmtsample$DropBarcode"},{"path":"https://zhen-miao.github.io/PICsnATAC/articles/vignette-4----PIC-counting-with-dsc-ATAC-seq-data.html","id":"peak-set","dir":"Articles","previous_headings":"","what":"Peak set","title":"Vignette 4 -- PIC counting with dsc-ATAC-seq data","text":"want keep set peaks publication:","code":"feature_df <- read.csv(\"GSE123576_mousebrain_peaks_revision.bed\",   sep = \"\\t\", header = FALSE ) colnames(feature_df) <- c(\"seqname\", \"start\", \"end\") peak_sets <- GenomicRanges::makeGRangesFromDataFrame(feature_df)"},{"path":"https://zhen-miao.github.io/PICsnATAC/articles/vignette-4----PIC-counting-with-dsc-ATAC-seq-data.html","id":"run-pic-and-save-output","dir":"Articles","previous_headings":"","what":"Run PIC and save output","title":"Vignette 4 -- PIC counting with dsc-ATAC-seq data","text":"Please note, dsc-ATAC-seq data, beads overloaded, recommend set deduplicate = TRUE double count fragments. Although, based analysis, fragment.tsv.gz file provided GEO already de-duplicated, still recommend dsc-ATAC-seq data. Note multiple matrices, please make sure save different file names","code":"fragment_tsv_gz_file_location <- \"GSM3507349_Mouse2-Channel1.fragments.tsv.gz\" pic_mat <- PIC_counting(   cells = cells,   fragment_tsv_gz_file_location = fragment_tsv_gz_file_location,   peak_sets = peak_sets,   deduplicate = TRUE ) saveRDS(pic_mat, \"PIC_mat_1.rds\") ## if you have multiple matrices, don't forget to save under different names"},{"path":"https://zhen-miao.github.io/PICsnATAC/articles/vignette-4----PIC-counting-with-dsc-ATAC-seq-data.html","id":"reference","dir":"Articles","previous_headings":"","what":"Reference","title":"Vignette 4 -- PIC counting with dsc-ATAC-seq data","text":"used PIC-snATAC counting analysis, please cite manuscript: Miao Z, Kim J. Uniform quantification single-nucleus ATAC-seq data Paired-Insertion Counting (PIC) model-based insertion rate estimator. Nature Methods 21.1 (2024): 32-36. dsc-ATAC-seq dataset associated following publication: Lareau CA, Duarte FM, Chew JG, Kartha VK et al. Droplet-based combinatorial indexing massive-scale single-cell chromatin accessibility. Nat Biotechnol. 2019 Aug;37(8):916-924.","code":""},{"path":"https://zhen-miao.github.io/PICsnATAC/articles/vignette-5----DAR-analysis-with-PIC-parametric-framework.html","id":"content","dir":"Articles","previous_headings":"","what":"Content","title":"Vignette 5 -- DAR analysis with PIC parametric framework","text":"Vignette contains example conduct DAR analysis PIC parametric framework. developed statistical framework test differential accessible regions (DARs) cell types. framework incorporated distribution snATAC-seq count data (PIC count, can also run fragment count), higher power detecting DARs snATAC-seq data","code":""},{"path":"https://zhen-miao.github.io/PICsnATAC/articles/vignette-5----DAR-analysis-with-PIC-parametric-framework.html","id":"required-libraries","dir":"Articles","previous_headings":"","what":"Required libraries","title":"Vignette 5 -- DAR analysis with PIC parametric framework","text":"Please make sure following libraries installed loaded analysis.","code":"library(\"data.table\") library(\"GenomicRanges\") library(\"Matrix\") library(\"PICsnATAC\")"},{"path":"https://zhen-miao.github.io/PICsnATAC/articles/vignette-5----DAR-analysis-with-PIC-parametric-framework.html","id":"input-files","dir":"Articles","previous_headings":"","what":"Input files","title":"Vignette 5 -- DAR analysis with PIC parametric framework","text":"PIC test framework requires following input: peak cell PIC count matrix (pic_mat) cell type labels (cell_types) Note, please refer vignettes obtaining pic_mat, clustering annotation can conducted Seurat, ArchR, pipelines. , describe two steps test","code":""},{"path":"https://zhen-miao.github.io/PICsnATAC/articles/vignette-5----DAR-analysis-with-PIC-parametric-framework.html","id":"cell-specific-capturing-rate-estimation","dir":"Articles","previous_headings":"","what":"Cell-specific capturing rate estimation","title":"Vignette 5 -- DAR analysis with PIC parametric framework","text":"described manuscript, snATAC-seq data, cell may largely variant capturing rate (sequencing depth), , compute caputuring rate cell separating effect cell type-specific open probability object r_by_ct_out list two elements, p_by_t Peak cell type matrix, element represents open probability peak corresponding cell type q_vec vector cell-specific capturing rate second element input next function","code":"r_by_ct_out <- get_r_by_ct_mat_pq(   cell_type_set = unique(cell_types),   r_by_c = pic_mat,   cell_type_labels = cell_types,   n_features_per_cell = dim(pic_mat)[1] )"},{"path":"https://zhen-miao.github.io/PICsnATAC/articles/vignette-5----DAR-analysis-with-PIC-parametric-framework.html","id":"dar-test","dir":"Articles","previous_headings":"","what":"DAR test","title":"Vignette 5 -- DAR analysis with PIC parametric framework","text":"cell-specific caputuring rate, can now execute DAR test function output p value vector, specifying p value peak. addition, can calculate mean log fold change adjusting capturing rate add additional criteria determining set DAR. example code provided :","code":"p_vals <- DAR_by_LRT(pic_mat = pic_mat, capturing_rates = r_by_ct_out$q_vec, cell_type_labels = cell_types) cell_type_set <- unique(cell_types) capturing_rates <- r_by_ct_out$q_vec  ## mean accessibility values after correcting for sequencing depth rm1 <- rowSums(pic_mat[, cell_types == cell_type_set[1]] %*%   diag(1 / capturing_rates[cell_types == cell_type_set[1]])) /   sum(cell_types == cell_type_set[1]) rm2 <- rowSums(pic_mat[, cell_types == cell_type_set[2]] %*%   diag(1 / capturing_rates[cell_types == cell_type_set[2]])) /   sum(cell_types == cell_type_set[2])  ## sequencing depth corrected log fold change log_fc_depth_corrected <- log(rm2 + 0.0001) - log(rm1 + 0.0001) # 0.0001 is ## added to prevent log(0)  ## in situations sequencing depth disparity is not a concern, we can also ## use the uncorrected mean accessibility value, the codes are  rm1_unc <- rowMeans(pic_mat[, cell_types == cell_type_set[1]]) rm2_unc <- rowMeans(pic_mat[, cell_types == cell_type_set[2]])  log_fc_uncorrected <- log(rm2_unc + 0.0001) - log(rm1_unc + 0.0001) # 0.0001 ## is added to prevent log(0)"},{"path":"https://zhen-miao.github.io/PICsnATAC/articles/vignette-5----DAR-analysis-with-PIC-parametric-framework.html","id":"reference","dir":"Articles","previous_headings":"","what":"Reference","title":"Vignette 5 -- DAR analysis with PIC parametric framework","text":"used PIC-snATAC counting analysis, please cite manuscript: Miao Z, Kim J. Uniform quantification single-nucleus ATAC-seq data Paired-Insertion Counting (PIC) model-based insertion rate estimator. Nature Methods 21.1 (2024): 32-36.","code":""},{"path":"https://zhen-miao.github.io/PICsnATAC/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Zhen Miao. Author, maintainer. Junhyong Kim. Author.","code":""},{"path":"https://zhen-miao.github.io/PICsnATAC/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Miao, Zhen, Kim, Junhyong (2023). “Uniform quantification single-nucleus ATAC-seq data Paired- Insertion Counting (PIC) model-based insertion rate estimator.” Nature Methods, press. doi:10.1101/2022.04.20.488960.","code":"@Article{,   title = {Uniform quantification of single-nucleus ATAC-seq data with Paired- Insertion Counting (PIC) and a model-based insertion rate estimator},   author = {{Miao} and {Zhen} and {Kim} and {Junhyong}},   journal = {Nature Methods},   year = {2023},   volume = {in press},   doi = {10.1101/2022.04.20.488960}, }"},{"path":"https://zhen-miao.github.io/PICsnATAC/index.html","id":"picsnatac","dir":"","previous_headings":"","what":"PICsnATAC: Paired Insertion Counting for snATAC-seq data","title":"PICsnATAC: Paired Insertion Counting for snATAC-seq data","text":"goal PICsnATAC accurately quantify snATAC-seq data. two key components :","code":""},{"path":[]},{"path":"https://zhen-miao.github.io/PICsnATAC/index.html","id":"motivation","dir":"","previous_headings":"1. Constructing cell-by-peak matrix with Paired Insertion Counting (PIC).","what":"Motivation:","title":"PICsnATAC: Paired Insertion Counting for snATAC-seq data","text":"two common counting approaches snATAC-seq data, fragment-based counting insertion-based counting. generate inconsistent results (see figure ).  , present PIC uniform counting choice various assays, including 10X Genomics snATAC-seq, sci-ATAC-seq, SNARE-seq, dsc-ATAC-seq, s3-ATAC-seq, scNANO-ATAC.","code":""},{"path":[]},{"path":"https://zhen-miao.github.io/PICsnATAC/index.html","id":"motivation-1","dir":"","previous_headings":"2. Conducting Differential Accessible Region (DAR) identification analysis using the PIC matrix.","what":"Motivation:","title":"PICsnATAC: Paired Insertion Counting for snATAC-seq data","text":"Two insertion events correct primer configurations required one viable fragment. derived probability distribution fragment count function insertion rate derived model-based insertion rate estimation framework. applied likelihood ratio test approach detect DARs populations.  Building upon model-based insertion rate estimation framework, analysis provides sensitive test DAR cell groups (cell types).","code":""},{"path":"https://zhen-miao.github.io/PICsnATAC/index.html","id":"dependencies","dir":"","previous_headings":"","what":"Dependencies","title":"PICsnATAC: Paired Insertion Counting for snATAC-seq data","text":"Please install dependent libraries running following codes","code":"install.packages('data.table') ## (please make sure it is newer than 1.8) if (!require(\"BiocManager\", quietly = TRUE))     install.packages(\"BiocManager\") BiocManager::install(c('IRanges', 'GenomicRanges','Rsamtools', 'GenomeInfoDb'))"},{"path":"https://zhen-miao.github.io/PICsnATAC/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"PICsnATAC: Paired Insertion Counting for snATAC-seq data","text":"can install --date version PICsnATAC GitHub : PIC-snATAC light-weight package. Installation typically takes <5 min.","code":"# install.packages(\"devtools\") devtools::install_github(\"Zhen-Miao/PICsnATAC\")"},{"path":"https://zhen-miao.github.io/PICsnATAC/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"PICsnATAC: Paired Insertion Counting for snATAC-seq data","text":"basic example shows construct PIC-based cell peak matrix:","code":"library(PICsnATAC)  pic_matrix <- PIC_counting(cells, fragment_tsv_gz_file_location, peak_sets)"},{"path":"https://zhen-miao.github.io/PICsnATAC/index.html","id":"vignettes","dir":"","previous_headings":"","what":"Vignettes","title":"PICsnATAC: Paired Insertion Counting for snATAC-seq data","text":"vignettes can found pkgdown page: https://zhen-miao.github.io/PICsnATAC/","code":""},{"path":"https://zhen-miao.github.io/PICsnATAC/index.html","id":"interactive-notebooks","dir":"","previous_headings":"","what":"Interactive Notebooks","title":"PICsnATAC: Paired Insertion Counting for snATAC-seq data","text":", provided two Google Colab notebooks users run codes cloud (processed example data link provided). However, snATAC-seq data typically large computer intensive, recommended run using computing cluster large datasets Notebook 1: Run PIC counting PBMC data. Notebook 2: Run PIC DAR SNARE-seq2 brain data.","code":""},{"path":"https://zhen-miao.github.io/PICsnATAC/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"PICsnATAC: Paired Insertion Counting for snATAC-seq data","text":"use PICsnATAC research, please cite paper: Miao Z, Kim J. Uniform quantification single-nucleus ATAC-seq data Paired-Insertion Counting (PIC) model-based insertion rate estimator. Nature Methods 21.1 (2024): 32-36.","code":""},{"path":"https://zhen-miao.github.io/PICsnATAC/reference/DAR_by_LRT.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute p value for DAR test between two cell types — DAR_by_LRT","title":"Compute p value for DAR test between two cell types — DAR_by_LRT","text":"Compute p value DAR test two cell types","code":""},{"path":"https://zhen-miao.github.io/PICsnATAC/reference/DAR_by_LRT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute p value for DAR test between two cell types — DAR_by_LRT","text":"","code":"DAR_by_LRT(   pic_mat,   capturing_rates,   cell_type_labels,   n_cores = 1,   plen = NULL,   min_frag_length = 25,   max_frag_length = 600,   estimation_approach = \"MLE\" )"},{"path":"https://zhen-miao.github.io/PICsnATAC/reference/DAR_by_LRT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute p value for DAR test between two cell types — DAR_by_LRT","text":"pic_mat observed peak cell PIC count matrix capturing_rates vector estimated capturing rates cell cell_type_labels vector specifying cell type labels n_cores numerical value specify number cores parallel, default = 1 plen vector peak length min_frag_length value s1 hyperparameter ssPoisson distribution, stands minimum fragment length requirement fragment can amplifiable mappable genome. Default = 25 max_frag_length value s2 hyperparameter ssPoisson distribution, stands max fragment length requirement fragment can amplifiable. Default = 600 estimation_approach approach parameter estimation, either 'MLE' condition 1 '' condition 1+2. 'MLE' approach accurate usually higher power, ignores size filtering step snATAC-seq data generation. Default 'MLE'","code":""},{"path":"https://zhen-miao.github.io/PICsnATAC/reference/DAR_by_LRT.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute p value for DAR test between two cell types — DAR_by_LRT","text":"Log loss value","code":""},{"path":"https://zhen-miao.github.io/PICsnATAC/reference/PIC_counting.html","id":null,"dir":"Reference","previous_headings":"","what":"Count snATAC-seq data matrix with Paired Insertion Counting (PIC) — PIC_counting","title":"Count snATAC-seq data matrix with Paired Insertion Counting (PIC) — PIC_counting","text":"Count snATAC-seq data matrix Paired Insertion Counting (PIC)","code":""},{"path":"https://zhen-miao.github.io/PICsnATAC/reference/PIC_counting.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count snATAC-seq data matrix with Paired Insertion Counting (PIC) — PIC_counting","text":"","code":"PIC_counting(   cells,   fragment_tsv_gz_file_location,   peak_sets,   deduplicate = FALSE,   load_full = TRUE,   extend_size = 5L,   verbose = TRUE )"},{"path":"https://zhen-miao.github.io/PICsnATAC/reference/PIC_counting.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count snATAC-seq data matrix with Paired Insertion Counting (PIC) — PIC_counting","text":"cells cell barcode lables Character vector fragment_tsv_gz_file_location 10X Cell Ranger output fragment.tsv.gz file location. can usually found /directory Cell Ranger output peak_sets set peaks GenomicRanges object. features data matrix. Alternatively, can data.frame function convert GenomicRanges object deduplicate Whether include deduplicate step within cell, fragments identical start end location deduplicated. usually unnecessisary Cell Ranger ATAC output, since Cell Ranger ATAC already deduplicated fragments. dsc-ATAC-seq data, step helpful recommended. load_full Whether load whole fragment.tsv.gz file memory. set FALSE, function load dynamically save RAM extend_size long extend exact insertion site accessible window verbose Whether output progress information including progress bar","code":""},{"path":"https://zhen-miao.github.io/PICsnATAC/reference/PIC_counting.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count snATAC-seq data matrix with Paired Insertion Counting (PIC) — PIC_counting","text":"peak cell PIC count matrix","code":""},{"path":"https://zhen-miao.github.io/PICsnATAC/reference/count_peaks.html","id":null,"dir":"Reference","previous_headings":"","what":"Count number of paired insertions in each peak — count_peaks","title":"Count number of paired insertions in each peak — count_peaks","text":"Count number paired insertions peak","code":""},{"path":"https://zhen-miao.github.io/PICsnATAC/reference/count_peaks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count number of paired insertions in each peak — count_peaks","text":"","code":"count_peaks(peak_sets, filtered_fragments, extend_size, n_features)"},{"path":"https://zhen-miao.github.io/PICsnATAC/reference/count_peaks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count number of paired insertions in each peak — count_peaks","text":"peak_sets GRanges object peak sets filtered_fragments filtered fragment also GRanges object extend_size long extend exact insertion site accessible window n_features Number features (peaks)","code":""},{"path":"https://zhen-miao.github.io/PICsnATAC/reference/count_peaks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count number of paired insertions in each peak — count_peaks","text":"sparse vector PIC peak","code":""},{"path":"https://zhen-miao.github.io/PICsnATAC/reference/data_frame_to_GRanges.html","id":null,"dir":"Reference","previous_headings":"","what":"convert peak_set into GRanges object if input is a data.frame — data_frame_to_GRanges","title":"convert peak_set into GRanges object if input is a data.frame — data_frame_to_GRanges","text":"convert peak_set GRanges object input data.frame","code":""},{"path":"https://zhen-miao.github.io/PICsnATAC/reference/data_frame_to_GRanges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"convert peak_set into GRanges object if input is a data.frame — data_frame_to_GRanges","text":"","code":"data_frame_to_GRanges(peak_sets)"},{"path":"https://zhen-miao.github.io/PICsnATAC/reference/data_frame_to_GRanges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"convert peak_set into GRanges object if input is a data.frame — data_frame_to_GRanges","text":"peak_sets data.frame object peaks want use features first column seqname, (e.g., chr1); second column start site, third column end site. 5 bp 4 bp correction Tn5 insertion location.","code":""},{"path":"https://zhen-miao.github.io/PICsnATAC/reference/data_frame_to_GRanges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"convert peak_set into GRanges object if input is a data.frame — data_frame_to_GRanges","text":"GRanges object contain information peak_sets","code":""},{"path":"https://zhen-miao.github.io/PICsnATAC/reference/get_r_by_ct_mat_pq.html","id":null,"dir":"Reference","previous_headings":"","what":"Get region (peak) by cell type matrix and per cell capturing rate — get_r_by_ct_mat_pq","title":"Get region (peak) by cell type matrix and per cell capturing rate — get_r_by_ct_mat_pq","text":"snATAC-seq (binary) dataset, compute peak-specific open probability cell-specific capturing rates","code":""},{"path":"https://zhen-miao.github.io/PICsnATAC/reference/get_r_by_ct_mat_pq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get region (peak) by cell type matrix and per cell capturing rate — get_r_by_ct_mat_pq","text":"","code":"get_r_by_ct_mat_pq(   cell_type_set,   r_by_c,   cell_type_labels,   n_features_per_cell,   p_acc = 5e-04,   q_acc = 5e-04,   n_max_iter = 800,   verbose = TRUE )"},{"path":"https://zhen-miao.github.io/PICsnATAC/reference/get_r_by_ct_mat_pq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get region (peak) by cell type matrix and per cell capturing rate — get_r_by_ct_mat_pq","text":"cell_type_set vector containing cell types r_by_c Input matrix, region (peak) cell cell_type_labels vector containing cell type labels n_features_per_cell number features matrix, can calculated nrow(r_by_c) p_acc accuracy p, default specified 0.0005 q_acc accuracy q, default specified 0.0005 n_max_iter maximum iteration, default = 800 verbose Whether output information processing status","code":""},{"path":"https://zhen-miao.github.io/PICsnATAC/reference/get_r_by_ct_mat_pq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get region (peak) by cell type matrix and per cell capturing rate — get_r_by_ct_mat_pq","text":"list two elements, p_by_t Peak cell type matrix, element represents open probability peak corresponding cell type q_vec vector cell-specific capturing rate","code":""},{"path":"https://zhen-miao.github.io/PICsnATAC/reference/load_fragments.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for loading fragment files and filter by cell barcodes — load_fragments","title":"Function for loading fragment files and filter by cell barcodes — load_fragments","text":"Function loading fragment files filter cell barcodes","code":""},{"path":"https://zhen-miao.github.io/PICsnATAC/reference/load_fragments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for loading fragment files and filter by cell barcodes — load_fragments","text":"","code":"load_fragments(fragment_tsv_gz_file_location, cells, verbose = TRUE)"},{"path":"https://zhen-miao.github.io/PICsnATAC/reference/load_fragments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for loading fragment files and filter by cell barcodes — load_fragments","text":"fragment_tsv_gz_file_location 10X Cell Ranger output fragment.tsv.gz file location. can usually found /directory Cell Ranger output cells cell barcode lables Character vector verbose Whether output progress message. Default TRUE","code":""},{"path":"https://zhen-miao.github.io/PICsnATAC/reference/load_fragments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function for loading fragment files and filter by cell barcodes — load_fragments","text":"data.frame containing fragments filtered cell barcodes","code":""},{"path":"https://zhen-miao.github.io/PICsnATAC/reference/obs_to_insertion_ME.html","id":null,"dir":"Reference","previous_headings":"","what":"Moment estimator for insertion rates from observed values — obs_to_insertion_ME","title":"Moment estimator for insertion rates from observed values — obs_to_insertion_ME","text":"Moment estimator insertion rates observed values","code":""},{"path":"https://zhen-miao.github.io/PICsnATAC/reference/obs_to_insertion_ME.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Moment estimator for insertion rates from observed values — obs_to_insertion_ME","text":"","code":"obs_to_insertion_ME(   pic_mat,   capturing_rates,   cell_type_labels,   cap_insertion = 20,   min_frag_length = 25,   max_frag_length = 600,   insertion_rates = (1:2000) * 0.01,   peak_lengths = 4:20 * 50 )"},{"path":"https://zhen-miao.github.io/PICsnATAC/reference/obs_to_insertion_ME.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Moment estimator for insertion rates from observed values — obs_to_insertion_ME","text":"pic_mat observed peak cell PIC count matrix capturing_rates vector estimated capturing rates cell cell_type_labels vector cell type lables cell cap_insertion maximum number insertions peak region. min_frag_length value s1 hyperparameter ssPoisson distribution, stands minimum fragment length requirement fragment can amplifiable mappable genome. Default = 25 max_frag_length value s2 hyperparameter ssPoisson distribution, stands max fragment length requirement fragment can amplifiable. Default = 600 insertion_rates range insertion rates (per 1000 bp) considered. peak_lengths vector peak lengths","code":""},{"path":"https://zhen-miao.github.io/PICsnATAC/reference/obs_to_insertion_ME.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Moment estimator for insertion rates from observed values — obs_to_insertion_ME","text":"matrix estimated insertion rates","code":""},{"path":"https://zhen-miao.github.io/PICsnATAC/reference/obs_to_insertion_MLE_lam.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate insertion rate from observed PIC counts — obs_to_insertion_MLE_lam","title":"Calculate insertion rate from observed PIC counts — obs_to_insertion_MLE_lam","text":"Calculate insertion rate observed PIC counts","code":""},{"path":"https://zhen-miao.github.io/PICsnATAC/reference/obs_to_insertion_MLE_lam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate insertion rate from observed PIC counts — obs_to_insertion_MLE_lam","text":"","code":"obs_to_insertion_MLE_lam(pic_mat, capturing_rates, plen, n_cores)"},{"path":"https://zhen-miao.github.io/PICsnATAC/reference/obs_to_insertion_MLE_lam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate insertion rate from observed PIC counts — obs_to_insertion_MLE_lam","text":"pic_mat observed peak cell PIC count matrix capturing_rates vector estimated capturing rates cell plen vector peak widths n_cores numerical value specify number cores parallel","code":""},{"path":"https://zhen-miao.github.io/PICsnATAC/reference/obs_to_insertion_MLE_lam.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate insertion rate from observed PIC counts — obs_to_insertion_MLE_lam","text":"optimized insertion rate (per 1000 base pairs) insertion rates 0.01 20","code":""},{"path":"https://zhen-miao.github.io/PICsnATAC/reference/obs_to_insertion_MLE_obj.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the optimal loss from observed PIC counts — obs_to_insertion_MLE_obj","title":"Calculate the optimal loss from observed PIC counts — obs_to_insertion_MLE_obj","text":"Calculate optimal loss observed PIC counts","code":""},{"path":"https://zhen-miao.github.io/PICsnATAC/reference/obs_to_insertion_MLE_obj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the optimal loss from observed PIC counts — obs_to_insertion_MLE_obj","text":"","code":"obs_to_insertion_MLE_obj(pic_mat, capturing_rates, plen, n_cores)"},{"path":"https://zhen-miao.github.io/PICsnATAC/reference/obs_to_insertion_MLE_obj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the optimal loss from observed PIC counts — obs_to_insertion_MLE_obj","text":"pic_mat observed peak cell PIC count matrix capturing_rates vector estimated capturing rates cell plen vector peak widths n_cores numerical value specify number cores parallel","code":""},{"path":"https://zhen-miao.github.io/PICsnATAC/reference/obs_to_insertion_MLE_obj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the optimal loss from observed PIC counts — obs_to_insertion_MLE_obj","text":"optimized loss insertion rates 0.01 20","code":""}]
